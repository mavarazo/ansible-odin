---
- name: Group monitoring
  group:
    name: "{{ monitoring_groupname }}"
    gid: "{{ monitoring_gid }}"
    state: present

- name: User monitoring
  user:
    name: "{{ monitoring_username }}"
    uid: "{{ monitoring_uid }}"
    state: present
    system: yes
    update_password: on_create
    create_home: no
    groups: 
      - "{{ monitoring_groupname }}"
      - "{{ docker_groupname }}"
    append: yes

- name: File monitoring directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ monitoring_username }}"
    group: "{{ monitoring_groupname }}"
  with_items:
    - "{{ monitoring_data_directory }}"

###
### Node-Exporter
###
- name: Docker container node-exporter
  docker_container:
    name: node-exporter
    image: "{{ monitoring_node_exporter_docker_image }}"
    pull: true
    ports:
      - "{{ monitoring_port_node_exporter }}:9100"
    restart_policy: unless-stopped
    memory: 1g

###
### Prometheus
###
- name: Docker container prometheus
  docker_container:
    name: prometheus
    image: "{{ monitoring_prometheus_docker_image }}"
    pull: true
    volumes:
      - "{{ monitoring_data_directory }}/prometheus:/etc/prometheus:rw"
    ports:
      - "{{ monitoring_port_prometheus }}:9090"
    links:
      - node-exporter
    restart_policy: unless-stopped
    memory: 1g

###
### Grafana
###
- name: Docker container grafana
  docker_container:
    name: grafana
    image: "{{ monitoring_grafana_docker_image }}"
    pull: true
    volumes:
      - "{{ monitoring_data_directory }}/grafana/data:/var/lib/grafana:rw"
      - "{{ monitoring_data_directory }}/grafana/config/provisioning:/etc/grafana/provisioning:ro"
    ports:
      - "{{ monitoring_port_grafana }}:3000"
    links:
      - prometheus
    restart_policy: unless-stopped
    memory: 1g
    labels:
      traefik.backend: "grafana"
      traefik.frontend.rule: "Host:grafana.{{ traefik_acme_domain }}"
      traefik.enable: "{{ monitoring_available_external }}"
      traefik.port: "3000"